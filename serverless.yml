service: serverless-node-app

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:STAGE}
  region: ${env:REGION}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    STAGE: ${env:STAGE}
    NODE_ENV: ${env:NODE_ENV}
    USERS_TABLE: 'users-${opt:stage, self:provider.stage}'


functions:
  graphQLAPI:
    handler: api/app.handler
    events:
      - http:
          path: graphql
          method: get
          cors: true
      - http:
          path: graphql
          method: post
          cors: true

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USERS_TABLE}

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-offline